<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>S.X.Zhang</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-06-18T06:42:46.157Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Shi-Xue Zhang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo页脚添加访客人数和总访问量</title>
    <link href="http://example.com/2023/06/14/hexo%E9%A1%B5%E8%84%9A%E6%B7%BB%E5%8A%A0%E8%AE%BF%E5%AE%A2%E4%BA%BA%E6%95%B0%E5%92%8C%E6%80%BB%E8%AE%BF%E9%97%AE%E9%87%8F/"/>
    <id>http://example.com/2023/06/14/hexo%E9%A1%B5%E8%84%9A%E6%B7%BB%E5%8A%A0%E8%AE%BF%E5%AE%A2%E4%BA%BA%E6%95%B0%E5%92%8C%E6%80%BB%E8%AE%BF%E9%97%AE%E9%87%8F/</id>
    <published>2023-06-14T14:46:31.000Z</published>
    <updated>2023-06-18T06:42:46.157Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p>解决过程中参考的博客：<a href="https://chrischen0405.github.io/2018/09/11/post20180911/">https://chrischen0405.github.io/2018/09/11/post20180911/</a>  </p><h3 id="1-配置方式使用不蒜子计数"><a href="#1-配置方式使用不蒜子计数" class="headerlink" title="1.配置方式使用不蒜子计数"></a>1.配置方式使用不蒜子计数</h3><p>打开主题的配置文件/theme/next/_config.yml，找到如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Show Views &#x2F; Visitors of the website &#x2F; page with busuanzi.</span><br><span class="line"># Get more information on http:&#x2F;&#x2F;ibruce.info&#x2F;2015&#x2F;04&#x2F;04&#x2F;busuanzi</span><br><span class="line">busuanzi_count:</span><br><span class="line">  enable: true</span><br><span class="line">  total_visitors: true</span><br><span class="line">  total_visitors_icon: fa fa-user</span><br><span class="line">  total_views: true</span><br><span class="line">  total_views_icon: fa fa-eye</span><br><span class="line">  post_views: true</span><br><span class="line">  post_views_icon: fa fa-eye</span><br></pre></td></tr></table></figure><p>将enable的值由false改为true，便可以看到页脚出现访问量。</p><h3 id="2-脚本方法使用不蒜子计数"><a href="#2-脚本方法使用不蒜子计数" class="headerlink" title="2.脚本方法使用不蒜子计数"></a>2.脚本方法使用不蒜子计数</h3><h4 id="1-安装脚本（必选）"><a href="#1-安装脚本（必选）" class="headerlink" title="1.安装脚本（必选）"></a>1.安装脚本（必选）</h4><p>要使用不蒜子必须在页面中引入busuanzi.js，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src&#x3D;&quot;&#x2F;&#x2F;busuanzi.ibruce.info&#x2F;busuanzi&#x2F;2.3&#x2F;busuanzi.pure.mini.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>本人使用的是next主题，所以在themes/next/layout/_partial/footer.swig中添加上述脚本，也可以把脚本添加在header中，如果使用的是其他主题，大致也是一样的，不过可能后缀是ejs，没有影响。</p><h4 id="2-安装标签（可选）"><a href="#2-安装标签（可选）" class="headerlink" title="2.安装标签（可选）"></a>2.安装标签（可选）</h4><p>要显示站点总访问量，复制以下代码添加到你需要显示的位置。有两种算法可选：</p><p>算法a：pv的方式，单个用户连续点击n篇文章，记录n次访问量。</p><span id="busuanzi_container_site_pv">    本站总访问量<span id="busuanzi_value_site_pv"></span>次</span><p>算法b：uv的方式，单个用户连续点击n篇文章，只记录1次访客数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id&#x3D;&quot;busuanzi_container_site_uv&quot;&gt;</span><br><span class="line">  本站访客数&lt;span id&#x3D;&quot;busuanzi_value_site_uv&quot;&gt;&lt;&#x2F;span&gt;人次</span><br><span class="line">&lt;&#x2F;span&gt;</span><br></pre></td></tr></table></figure><h4 id="3-安装教程"><a href="#3-安装教程" class="headerlink" title="3.安装教程"></a>3.安装教程</h4><p>一般显示站点访问量在页脚，所以我们选择在footer.swig中添加标签，同时我们还可以通过修改主题配置来方便选择是否显示访问量，步骤如下：首先，我们在next主题下的_config.yml中加入以下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># visitors count</span><br><span class="line">counter: true</span><br></pre></td></tr></table></figure><p>之后可以更改counter的值为false来隐藏页脚的访问量统计，然后，我们在themes/next/layout/_partial/footer.swig中添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.footer.counter %&#125;</span><br><span class="line">    &lt;script async src&#x3D;&quot;&#x2F;&#x2F;busuanzi.ibruce.info&#x2F;busuanzi&#x2F;2.3&#x2F;busuanzi.pure.mini.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;span id&#x3D;&quot;busuanzi_container_site_pv&quot;&gt;本站总访问量&lt;span id&#x3D;&quot;busuanzi_value_site_pv&quot;&gt;&lt;&#x2F;span&gt;次&lt;&#x2F;span&gt;</span><br><span class="line">    &lt;span class&#x3D;&quot;post-meta-divider&quot;&gt;|&lt;&#x2F;span&gt;</span><br><span class="line">    &lt;span id&#x3D;&quot;busuanzi_container_site_uv&quot;&gt;本站访客数&lt;span id&#x3D;&quot;busuanzi_value_site_uv&quot;&gt;&lt;&#x2F;span&gt;人&lt;&#x2F;span&gt;</span><br><span class="line">&#123;% endif </span><br></pre></td></tr></table></figure><p>这样便可以在底部显示访问量了，并且可以通过更改主题配置中的参数来选择是否显示访问量，只要引入busuanzi.js之后，即使不显示访问量也会统计。</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><li>两种方法选择一种使用即可，都使用可能会出现无法显示的问题</li><li>使用hexo s部署在本地预览效果的时候，uv数和pv数会过大，这是由于不蒜子用户使用一个存储空间，所以使用localhost:4000进行本地预览的时候会导致数字异常，这是正常现象，只需要将博客部署至云端即可恢复正常。</li>  <h3 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h3><h4 id="1-打开busuanzi后页面底部的客人数和总访问量无法显示"><a href="#1-打开busuanzi后页面底部的客人数和总访问量无法显示" class="headerlink" title="1.打开busuanzi后页面底部的客人数和总访问量无法显示"></a>1.打开busuanzi后页面底部的客人数和总访问量无法显示</h4><p>试了很多解决方法无效，造成这个问题的原因很多。解决我的问题的办法是:</p><p>将\themes\next6\layout_partials\footer.swig里面的这段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;powered-by&quot;&gt;</span><br><span class="line">  &lt;i class&#x3D;&quot;fa fa-user-md&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">  &lt;span id&#x3D;&quot;busuanzi_value_site_uv&quot;&gt;</span><br><span class="line">本站总访客数:&lt;span id&#x3D;&quot;busuanzi_value_site_uv&quot;&gt;&lt;&#x2F;span&gt;&amp;nbsp;&amp;nbsp;|</span><br><span class="line">  &lt;&#x2F;span&gt;</span><br><span class="line">  &lt;i class&#x3D;&quot;fa fa-eye&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">  &lt;span id&#x3D;&quot;busuanzi_value_site_pv&quot;&gt;</span><br><span class="line">      本站总访问量&lt;span id&#x3D;&quot;busuanzi_value_site_pv&quot;&gt;&lt;&#x2F;span&gt;次</span><br><span class="line">  &lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;powered-by&quot;&gt;</span><br><span class="line">  &lt;i class&#x3D;&quot;fa fa-user-md&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">  &lt;span&gt;</span><br><span class="line">本站总访客数:&lt;span id&#x3D;&quot;busuanzi_value_site_uv&quot;&gt;&lt;&#x2F;span&gt;&amp;nbsp;&amp;nbsp;|</span><br><span class="line">  &lt;&#x2F;span&gt;</span><br><span class="line">  &lt;i class&#x3D;&quot;fa fa-eye&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">  &lt;span&gt;</span><br><span class="line">      本站总访问量&lt;span id&#x3D;&quot;busuanzi_value_site_pv&quot;&gt;&lt;&#x2F;span&gt;次</span><br><span class="line">  &lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>删除“本站总访客数”和“本站总访问量” 前面那个span里面的”id=”busuanzi_value_site_uv”</p><h4 id="2-博客页面的浏览量使用leancloud不起作用"><a href="#2-博客页面的浏览量使用leancloud不起作用" class="headerlink" title="2.博客页面的浏览量使用leancloud不起作用"></a>2.博客页面的浏览量使用leancloud不起作用</h4><p>具体leancloud怎么设置参考网上各种教程即可，但是之后遇到了博客页面的浏览量一直为0， 如图1(这是修复之后才有变化)，而且leancloud里的Counter一直没有数据，但leancloud有显示网站的访问次数。</p><img src="1.png">  <p>解决办法:   </p><ol><li>找到themes\next6\layout_third-party\statistics\lean-analytics.swig</li><li>文件内搜索addCount(Counter);<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if (CONFIG.page.isPost) &#123;</span><br><span class="line">     if (CONFIG.hostname !&#x3D;&#x3D; location.hostname) return;</span><br><span class="line">     addCount(Counter);</span><br><span class="line">   &#125; else if (document.querySelectorAll(&#39;.post-title-link&#39;).length &gt;&#x3D; 1) &#123;</span><br><span class="line">     showTime(Counter);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li><li>删掉if (CONFIG.hostname !== location.hostname) return;<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if (CONFIG.page.isPost) &#123;</span><br><span class="line"> </span><br><span class="line"> addCount(Counter);</span><br><span class="line">&#125; else if (document.querySelectorAll(&#39;.post-title-link&#39;).length &gt;&#x3D; 1) &#123;</span><br><span class="line">     showTime(Counter);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;使用不蒜子来进行统计，为hexo博客（NexT主题）添加页脚访客人数和总访问量的两种方法&lt;/p&gt;</summary>
    
    
    
    <category term="Hexo" scheme="http://example.com/categories/Hexo/"/>
    
    
    <category term="experience" scheme="http://example.com/tags/experience/"/>
    
  </entry>
  
  <entry>
    <title>戴尔服务器风扇控速静音</title>
    <link href="http://example.com/2022/05/10/%E6%88%B4%E5%B0%94%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%A3%8E%E6%89%87%E6%8E%A7%E9%80%9F%E9%9D%99%E9%9F%B3/"/>
    <id>http://example.com/2022/05/10/%E6%88%B4%E5%B0%94%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%A3%8E%E6%89%87%E6%8E%A7%E9%80%9F%E9%9D%99%E9%9F%B3/</id>
    <published>2022-05-10T02:49:52.000Z</published>
    <updated>2023-06-14T14:55:29.448Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p>解决过程中参考的博客：<a href="https://chrischen0405.github.io/2018/09/11/post20180911/">https://chrischen0405.github.io/2018/09/11/post20180911/</a>  </p><h3 id="1-配置方式使用不蒜子计数"><a href="#1-配置方式使用不蒜子计数" class="headerlink" title="1.配置方式使用不蒜子计数"></a>1.配置方式使用不蒜子计数</h3><p>第一种引入脚本的方法适用于任何类型的个人站点，如果你使用的主题是NexT，那么你可以很方便的进行不蒜子的访客统计设置，仅仅只需要一步：</p><p>打开主题的配置文件/theme/next/_config.yml，找到如下配置：</p><p>找到主板对应的iDRAC网线接⼝，⽤⽹线接出到局域网路由器或者交换机上   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"># Show Views &#x2F; Visitors of the website &#x2F; page with busuanzi.</span><br><span class="line"># Get more information on http:&#x2F;&#x2F;ibruce.info&#x2F;2015&#x2F;04&#x2F;04&#x2F;busuanzi</span><br><span class="line">busuanzi_count:</span><br><span class="line">  enable: true</span><br><span class="line">  total_visitors: true</span><br><span class="line">  total_visitors_icon: fa fa-user</span><br><span class="line">  total_views: true</span><br><span class="line">  total_views_icon: fa fa-eye</span><br><span class="line">  post_views: true</span><br><span class="line">  post_views_icon: fa fa-eye</span><br><span class="line">  </span><br><span class="line">&#96;&#96;&#96;  </span><br><span class="line">将enable的值由false改为true，便可以看到页脚出现访问量：</span><br><span class="line"></span><br><span class="line">site_uv表示是否显示整个网站的UV数</span><br><span class="line">site_pv表示是否显示整个网站的PV数</span><br><span class="line">page_pv表示是否显示每个页面的PV数</span><br><span class="line">当然，对于不蒜子的配置可以随意更改，一下附上本人的配置：</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">### Step 2：</span><br><span class="line">服务器开机，安Fn+F2进入BIOS, 查看iDRAC网络的IP地址，以及用户名和密码。默认用户名：root, 密码需要打开机箱前⾯板电源右侧的‘标签抽屉’，在标签背后可以看到默认密码（可以在BIOS中修改，如果忘记密码和用户名）。</span><br><span class="line"></span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;img  src&#x3D;&quot;https:&#x2F;&#x2F;pic3.zhimg.com&#x2F;80&#x2F;v2-c8987fe85dedea25cf7f8896481cced6_720w.jpg&quot; align&#x3D;&quot;center&quot;&#x2F;&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;img  src&#x3D;&quot;https:&#x2F;&#x2F;pic2.zhimg.com&#x2F;80&#x2F;v2-af60f736212fed6e2378f9bb23b719b9_720w.jpg&quot; align&#x3D;&quot;center&quot;&#x2F;&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;img  src&#x3D;&quot; https:&#x2F;&#x2F;pic4.zhimg.com&#x2F;80&#x2F;v2-64b7638b13d8f7a2e0e2618edab973c7_720w.jpg&quot; align&#x3D;&quot;center&quot;&#x2F;&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;&#x2F;div&gt;  </span><br><span class="line"></span><br><span class="line">### Step 3：</span><br><span class="line"></span><br><span class="line">在本地机器上安装安装dell 的 [racadm](https:&#x2F;&#x2F;www.dell.com&#x2F;support&#x2F;home&#x2F;zh-cn&#x2F;product-support&#x2F;product&#x2F;poweredge-t640&#x2F;drivers)(根据本地机器的系统选择不同的racadm，与远程服务器无关)。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### Step 4：</span><br><span class="line"></span><br><span class="line">以管理员身份运行命令行窗口（windows下的CMD），运行： racadm -r 192.168.0.xxx -u xxx -p xxx getsysinfo 测试是否可以连接到远程服务器,如果不可以检查网，以及用户名和密码是否正确。</span><br><span class="line"></span><br><span class="line">成功连接后， 获取所有PCIE接口的信息：  </span><br></pre></td></tr></table></figure><p>racadm -r 192.168.0.xxx -u xxx -p xxx get System.PCIESlotLFM // List all available PCI slots</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">测试PCIE接口SHI是否连接GPU：</span><br></pre></td></tr></table></figure><p>racadm -r 192.168.0.xxx -u xxx -p xxx get System.PCIESlotLFM.1  //1-8</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">CardType&#x3D;video 表明连接的是GPU</span><br><span class="line"></span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;img  src&#x3D;&quot;https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;img_convert&#x2F;b031ffb4daacba760194e89672c3fa74.png&quot; align&#x3D;&quot;center&quot;&#x2F;&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">### Step 5：</span><br><span class="line"></span><br><span class="line">使用racadm命令，把风扇转速调成低功率模式（不用担心散热，这个是安全状态的最低功率）</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>racadm -r 192.168.0.xxx -u xxx -p xxx set System.PCIESlotLFM.1.LFMMode 2 //设置模式，应该只有0， 1， 2 三种，对应高中低。</p><p>```<br>开机服务器，看看有没有效果，我们在T640上测试过，这种方法是有效的。</p><p>注：你当然可以把所有的PCIE都设置成低功率模式。如果如此设置仍然没有效果，尝试用iDRAC更新BIOS和iDRAC，具体方法没有测试过，请参考文前的博客链接。</p>]]></content>
    
    
    <summary type="html">&lt;hr&gt;
&lt;p&gt;hexo博客(NexT主题)添加页脚访客人数和总访问量的两种方法, 利用不蒜子来进行统计, 为博客添加了页脚显示访客人数和总访问量的功能。&lt;/p&gt;</summary>
    
    
    
    <category term="Dell" scheme="http://example.com/categories/Dell/"/>
    
    
    <category term="record" scheme="http://example.com/tags/record/"/>
    
  </entry>
  
  <entry>
    <title>基于github的个人博客搭建(下)</title>
    <link href="http://example.com/2021/04/25/%E5%9F%BA%E4%BA%8Egithub%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA2/"/>
    <id>http://example.com/2021/04/25/%E5%9F%BA%E4%BA%8Egithub%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA2/</id>
    <published>2021-04-25T04:09:55.000Z</published>
    <updated>2022-03-17T09:06:59.356Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址"></a>参考网址</h2><p>亲测有效，hexo的next主题个性化配置，本人参考知乎大佬的博客，成功完成优化。  </p><ul><li>深秋无痕的博客：<a href="https://zhuanlan.zhihu.com/p/60424755">hexo的next主题个性化配置</a></li><li>路人SSS的博客：<a href="https://zhuanlan.zhihu.com/p/30836436">Hexo+Next主题优化</a></li><li>Valten123: <a href="https://blog.csdn.net/u014786530/article/details/103548737">Hexo+NexT搭建个人博客</a></li><li>CoderCXF: <a href="https://blog.csdn.net/weixin_42119041/article/details/104101566">hexo之next主题优化篇1</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文介绍基于我自己搭建个人博客的一些经验和过程。本博客主要采用了Hexo这个框架进行搭建，并采用github作为仓储。Hexo是一个简单、快速、强大的基于 Github Pages 的博客发布工具，支持Markdown格式，有众多优秀插件和主题。&lt;/p&gt;</summary>
    
    
    
    <category term="git" scheme="http://example.com/categories/git/"/>
    
    
    <category term="experience" scheme="http://example.com/tags/experience/"/>
    
  </entry>
  
  <entry>
    <title>基于github的个人博客搭建(上)</title>
    <link href="http://example.com/2021/04/20/%E5%9F%BA%E4%BA%8Egithub%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA1/"/>
    <id>http://example.com/2021/04/20/%E5%9F%BA%E4%BA%8Egithub%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA1/</id>
    <published>2021-04-20T13:32:00.000Z</published>
    <updated>2021-04-25T06:37:22.405Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="GitHub-个人网址"><a href="#GitHub-个人网址" class="headerlink" title="GitHub 个人网址"></a>GitHub 个人网址</h2><p>亲测有效，以下步骤请参考：<a href="https://www.cnblogs.com/chri330dj/p/12409263.html">https://www.cnblogs.com/chri330dj/p/12409263.html</a></p><h3 id="Step-1："><a href="#Step-1：" class="headerlink" title="Step 1："></a>Step 1：</h3><p>创建一个github新仓库，仓库命名为：“(你的用户名).github.io”</p><div><img  src="https://img2020.cnblogs.com/i-beta/997121/202003/997121-20200304104458271-1977380369.png" align="left"/><br><br></div><h3 id="Step-2："><a href="#Step-2：" class="headerlink" title="Step 2："></a>Step 2：</h3><p>点击Settings进入设置页面，下拉找到“Github Pages”，<br>打勾表示已开启page，随意选择一个主题, 并将仓库设置成公开（public). </p><div>   <img src="https://img2020.cnblogs.com/i-beta/997121/202003/997121-20200304104740335-1010227372.png" align="left"/></div><h3 id="Step-3："><a href="#Step-3：" class="headerlink" title="Step 3："></a>Step 3：</h3><p>确保已配置Git和node.js，打开cmd输入下图命令，如图返回版本信息则表示成功配置node.js  </p><div align="left"><img src="https://img2020.cnblogs.com/i-beta/997121/202003/997121-20200304105445493-1570324716.png"/>  </div><p>鼠标右键出现如下选择则表示成功配置git</p><img src="https://img2020.cnblogs.com/i-beta/997121/202003/997121-20200304105402731-908715653.png"/></div><h3 id="Step-4：安装HEXO"><a href="#Step-4：安装HEXO" class="headerlink" title="Step 4：安装HEXO"></a>Step 4：安装HEXO</h3><ul><li>在本地创建blog文件夹，在此文件夹内右击选择“Git Bash Here”  </li><li>输入  npm install -g hexo  安装HEXO确保已配置Git和node.js，打开cmd输入下图命令，如图返回版本信息则表示成功配置node.js</li></ul><div align="left"><img  src="https://img2020.cnblogs.com/i-beta/997121/202003/997121-20200304111906265-674934207.png"/></div><ul><li>输入 hexo -v 确认是否安装成功<div align=left><img  src="https://img2020.cnblogs.com/i-beta/997121/202003/997121-20200304112428628-203035300.png"/></div></li></ul><h3 id="Step-5：构建hexo项目"><a href="#Step-5：构建hexo项目" class="headerlink" title="Step 5：构建hexo项目"></a>Step 5：构建hexo项目</h3><ul><li><p>输入 hexo init 自动构建hexo项目</p><div><img  src="https://img2020.cnblogs.com/i-beta/997121/202003/997121-20200304112614522-342877400.png"/></div></li><li><p>构建成功提示</p><div><img  src="https://img2020.cnblogs.com/i-beta/997121/202003/997121-20200304113529590-575879807.png"/></div></li><li><p>输入 npm install，安装所需组件</p></li><li><p>输入hexo g，生成</p></li><li><p>输入hexo s，开启本地预览服务 </p><div><img  src="https://img2020.cnblogs.com/i-beta/997121/202003/997121-20200304113752094-1764630821.png"/></div></li><li><p>浏览器输入 <a href="http://localhost:4000/">http://localhost:4000</a> ，可以看到目前的效果</p></li></ul><p>(*) 如果出现一些莫名其妙的问题，可以先执行 hexo clean 来清理一下public的内容，然后再来重新生成和发布。</p><h3 id="Step-6：部署到GitHub"><a href="#Step-6：部署到GitHub" class="headerlink" title="Step 6：部署到GitHub"></a>Step 6：部署到GitHub</h3><ul><li>在项目根目录里找到 _config.yml 文件，修改其中的 deploy 字段<div><img  src="https://img2020.cnblogs.com/i-beta/997121/202003/997121-20200304115004209-1104963069.png"/></div>安装扩展工具：输入   npm install hexo-deployer-git --save</li></ul><h3 id="Step-7：检查SSH-Keys设置"><a href="#Step-7：检查SSH-Keys设置" class="headerlink" title="Step 7：检查SSH Keys设置"></a>Step 7：检查SSH Keys设置</h3><ul><li><p>输入  cd ~/.ssh</p><div><img  src="https://img2020.cnblogs.com/i-beta/997121/202003/997121-20200304115220416-1076136876.png"/></div></li><li><p>输入 ssh-keygen -t rsa -C “(邮箱地址)</p><div><img  src="https://img2020.cnblogs.com/i-beta/997121/202003/997121-20200304120802182-523566544.png"/></div></li></ul><ul><li><p>输入 eval “$(ssh-agent -s)”，添加密钥到ssh-agent</p><div><img  src="https://img2020.cnblogs.com/i-beta/997121/202003/997121-20200304133339703-2062447267.png"/></div></li><li><p>输入ssh-add ~/.ssh/github_rsa，添加生成的SSH key到ssh-agent</p><div><img  src="https://img2020.cnblogs.com/i-beta/997121/202003/997121-20200304133556917-1120480583.png"/></div></li></ul><h3 id="Step-8：添加SSH-Key到Github"><a href="#Step-8：添加SSH-Key到Github" class="headerlink" title="Step 8：添加SSH Key到Github"></a>Step 8：添加SSH Key到Github</h3><ul><li><p>输入 cat ~/.ssh/id_rsa.pub 复制SSH Key到粘贴板<br>(*) 上一步也可以打开文件夹找到目标文件夹，打开id_rsa.pub进行复制</p><div><img  src="https://img2020.cnblogs.com/i-beta/997121/202003/997121-20200304132328964-13532677.png"/></div></li><li><p>打开Github的Settings –&gt; SSH and GPG keys –&gt;  New SSH key </p><div><img  src="https://img2020.cnblogs.com/i-beta/997121/202003/997121-20200304121749199-1460788374.png"/></div></li></ul><ul><li><p>粘贴到Key下面的文本框里</p></li><li><p>输入ssh -T <a href="mailto:&#x67;&#x69;&#116;&#x40;&#x67;&#105;&#116;&#104;&#x75;&#98;&#46;&#x63;&#x6f;&#x6d;">&#x67;&#x69;&#116;&#x40;&#x67;&#105;&#116;&#104;&#x75;&#98;&#46;&#x63;&#x6f;&#x6d;</a>，测试SSH是否添加成功，需要输入yes</p><div><img  src="https://img2020.cnblogs.com/i-beta/997121/202003/997121-20200304122150859-1133452382.png"/></div></li><li><p>回到blog文件夹设置账户信息</p><div><img  src="https://img2020.cnblogs.com/i-beta/997121/202003/997121-20200304134148953-1539100197.png"/></div></li></ul><h3 id="Step-9：部署到github"><a href="#Step-9：部署到github" class="headerlink" title="Step 9：部署到github"></a>Step 9：部署到github</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* hexo d -g</span><br></pre></td></tr></table></figure><h3 id="Step-10"><a href="#Step-10" class="headerlink" title="Step 10:"></a>Step 10:</h3><p> 输入网址 https://(你的github用户名).github.io/   即可访问, 打不开可能因为网的问题，或者仓储设置成了私有模式。</p><p>常见hexo命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot; #新建文章</span><br><span class="line">hexo new page &quot;pageName&quot; #新建页面</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&#39;ctrl + c&#39;关闭server）</span><br><span class="line">hexo deploy #部署到GitHub</span><br><span class="line">hexo help  # 查看帮助</span><br><span class="line">hexo version  #查看Hexo的版本</span><br></pre></td></tr></table></figure><p>缩写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n &#x3D;&#x3D; hexo new</span><br><span class="line">hexo g &#x3D;&#x3D; hexo generate</span><br><span class="line">hexo s &#x3D;&#x3D; hexo server</span><br><span class="line">hexo d &#x3D;&#x3D; hexo deploy</span><br></pre></td></tr></table></figure><p>组合命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s #清理并生成并本地预览，且打开本地服务</span><br><span class="line">hexo s -g #生成并本地预览</span><br><span class="line">hexo d -g #生成并上传</span><br></pre></td></tr></table></figure><p>生成文件命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo new post xxx 新建博客文件</span><br><span class="line">hexo new page &quot;about&quot; 添加关于页面</span><br><span class="line">hexo new page &quot;tags&quot; 添加标签页面</span><br><span class="line">hexo new page &quot;categories&quot; 添加分类页面</span><br></pre></td></tr></table></figure><h2 id="Hexo的next主题个性化配置"><a href="#Hexo的next主题个性化配置" class="headerlink" title="Hexo的next主题个性化配置"></a>Hexo的next主题个性化配置</h2><p>此处介绍了我尝试并成功的一些个性化配置操作！</p><h3 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文介绍基于我自己搭建个人博客的一些经验和过程。本博客主要采用了Hexo这个框架进行搭建，并采用github作为仓储。Hexo是一个简单、快速、强大的基于 Github Pages 的博客发布工具，支持Markdown格式，有众多优秀插件和主题。&lt;/p&gt;</summary>
    
    
    
    <category term="git" scheme="http://example.com/categories/git/"/>
    
    
    <category term="experience" scheme="http://example.com/tags/experience/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu系统安装及管理</title>
    <link href="http://example.com/2021/04/20/Ubuntu%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E5%8F%8A%E7%AE%A1%E7%90%86/"/>
    <id>http://example.com/2021/04/20/Ubuntu%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E5%8F%8A%E7%AE%A1%E7%90%86/</id>
    <published>2021-04-20T13:31:45.000Z</published>
    <updated>2021-04-23T11:47:35.645Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ubuntu-install"><a href="#ubuntu-install" class="headerlink" title="ubuntu install"></a>ubuntu install</h2><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>1.关闭BIOS的安全启动项，启动方式设置成EFI<br>2.分两个区/boot 和 根目录 /（注意（boot分区大小应&gt;512M， 当使用ubuntu 20.04及以上版本，否则更新系统可能出现boot过小无法更新的情况）<br>3.启动点挂载boot分区，尤其是安装双系统时，否则容易出现安装成功，却找不到ubuntu启动项的情况。</p><h2 id="ubuntu-manage"><a href="#ubuntu-manage" class="headerlink" title="ubuntu manage"></a>ubuntu manage</h2><h3 id="安装包管理器"><a href="#安装包管理器" class="headerlink" title="安装包管理器"></a>安装包管理器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install synaptic</span><br></pre></td></tr></table></figure><h3 id="清理"><a href="#清理" class="headerlink" title="清理"></a>清理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt autoremove</span><br></pre></td></tr></table></figure><h3 id="dpkg命令"><a href="#dpkg命令" class="headerlink" title="dpkg命令"></a>dpkg命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dpkg -r | --remove xxx.deb  <span class="comment">#删除安装包</span></span><br><span class="line">dpkg -re -p |--purge xxx.deb <span class="comment">#连同配置文件一起删除</span></span><br><span class="line">dpkg -l <span class="comment">#查看系统中以安装软件包信息</span></span><br><span class="line">dpkg-reconfigure xxx <span class="comment">#重新配置软件包</span></span><br></pre></td></tr></table></figure><h3 id="apt命令"><a href="#apt命令" class="headerlink" title="apt命令"></a>apt命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -f xxx <span class="comment">#安装时顺便安装依赖</span></span><br><span class="line">apt-get remove -purge xxx <span class="comment">#卸载xxx同时删除配置文件</span></span><br><span class="line">apt-get update <span class="comment">#更新软件信息数据库</span></span><br><span class="line">apt-get upgrade <span class="comment">#进行系统升级，即更新已安装的包</span></span><br></pre></td></tr></table></figure><h3 id="安装grub-customizer"><a href="#安装grub-customizer" class="headerlink" title="安装grub-customizer"></a>安装grub-customizer</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:danielrichter2007/grub-customizer</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install grub-customizer</span><br></pre></td></tr></table></figure><p>管理双系统开机启动界面</p><h3 id="安装sysmonitor"><a href="#安装sysmonitor" class="headerlink" title="安装sysmonitor"></a>安装sysmonitor</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:fossfreedom/indicator-sysmonitor</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install indicator-sysmonitor</span><br></pre></td></tr></table></figure><p>启用内存、cpu、网速监视作用；设置开机自自启</p><h3 id="GCC版本管理"><a href="#GCC版本管理" class="headerlink" title="GCC版本管理"></a>GCC版本管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:ubuntu-toolchain-r/<span class="built_in">test</span></span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>如果提示未安装，还需要先安装它的包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install software-properties-common</span><br></pre></td></tr></table></figure><p>安装GCC-5：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gcc-5 g++-5</span><br></pre></td></tr></table></figure><p>查看版本和修改默认版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls &#x2F;usr&#x2F;bin&#x2F;gcc*</span><br><span class="line">ls &#x2F;usr&#x2F;bin&#x2F;g++*</span><br></pre></td></tr></table></figure><p>更新一下链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --install &#x2F;usr&#x2F;bin&#x2F;gcc gcc &#x2F;usr&#x2F;bin&#x2F;gcc-5 53 </span><br><span class="line">sudo update-alternatives --install &#x2F;usr&#x2F;bin&#x2F;g++ g++ &#x2F;usr&#x2F;bin&#x2F;g++-5 10</span><br></pre></td></tr></table></figure><p>查看修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --config gcc</span><br></pre></td></tr></table></figure><p>启用内存、cpu、网速监视作用；设置开机自自启</p><h3 id="Install-CUDA命令"><a href="#Install-CUDA命令" class="headerlink" title="Install CUDA命令"></a>Install CUDA命令</h3><p>下载相应版本的cuda,并安装好显卡驱动，以下为cuda的安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i cuda-repo-ubuntu1604-8-0-local-ga2_8.0.61-1_amd64.deb</span><br><span class="line">sudo dpkg -i cuda-repo-ubuntu1604-8-0-local-cublas-performance-update_8.0.61-1_amd64.deb </span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install cuda</span><br></pre></td></tr></table></figure><p>查看cuda是否安装成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvidia-smi</span><br><span class="line">nvidia-settings</span><br></pre></td></tr></table></figure><p>添加环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export LD_LIBRARY_PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda-8.0&#x2F;lib64:$LD_LIBRARY_PATH</span><br><span class="line">export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda-8.0&#x2F;bin:$PATH</span><br></pre></td></tr></table></figure><h3 id="Install-cudnn命令"><a href="#Install-cudnn命令" class="headerlink" title="Install cudnn命令"></a>Install cudnn命令</h3><p>下载需要的版本Runtime和Developer安装包安装<br>查看cudnn版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;usr&#x2F;include&#x2F;cudnn.h | grep CUDNN_MAJOR -A 2 或 cat &#x2F;usr&#x2F;local&#x2F;cuda&#x2F;include&#x2F;cudnn.h | grep CUDNN_MAJOR -A 2</span><br></pre></td></tr></table></figure><p>切换cudnn版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update-alternatives: using &#x2F;usr&#x2F;include&#x2F;x86_64-linux-gnu&#x2F;cudnn_v7.h to provide &#x2F;usr&#x2F;include&#x2F;cudnn.h (libcudnn) in manual mode</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文介绍一些ubuntu系统安装和管理的经验。&lt;/p&gt;</summary>
    
    
    
    <category term="ubuntu" scheme="http://example.com/categories/ubuntu/"/>
    
    
    <category term="record" scheme="http://example.com/tags/record/"/>
    
  </entry>
  
  <entry>
    <title>git-使用</title>
    <link href="http://example.com/2021/04/20/git-%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/2021/04/20/git-%E4%BD%BF%E7%94%A8/</id>
    <published>2021-04-20T13:31:26.000Z</published>
    <updated>2021-07-28T09:50:41.775Z</updated>
    
    <content type="html"><![CDATA[<h3 id="建立本地git仓库"><a href="#建立本地git仓库" class="headerlink" title="建立本地git仓库"></a>建立本地git仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init --bare sample.git</span><br></pre></td></tr></table></figure><p>选择一个目录作为Git仓库</p><h3 id="查看当前的git仓库状态"><a href="#查看当前的git仓库状态" class="headerlink" title="查看当前的git仓库状态"></a>查看当前的git仓库状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><h3 id="更新文件状态"><a href="#更新文件状态" class="headerlink" title="更新文件状态"></a>更新文件状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add * </span><br></pre></td></tr></table></figure><p>*是更新全部</p><h3 id="更新说明"><a href="#更新说明" class="headerlink" title="更新说明"></a>更新说明</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;XXX“</span></span><br></pre></td></tr></table></figure><p>commit只是提交到缓存区域，出现“*** Please tell me who you are.”提示， </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email <span class="string">&quot;you@example.com&quot;</span></span><br><span class="line">git config --global user.name <span class="string">&quot;Your Name&quot;</span></span><br><span class="line">git commit -m <span class="string">&quot;XXX&quot;</span></span><br></pre></td></tr></table></figure><p>没有则跳过，进行下一步</p><h3 id="上传项目"><a href="#上传项目" class="headerlink" title="上传项目"></a>上传项目</h3><p>如果是多人同时开发维护代码，得先拉取当前分支最新代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure><p>最后一步才是push到远程的master 或 main分支上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin main</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文记录一些常用的git命令，方便以后查询和使用！&lt;/p&gt;</summary>
    
    
    
    <category term="git" scheme="http://example.com/categories/git/"/>
    
    
    <category term="record" scheme="http://example.com/tags/record/"/>
    
  </entry>
  
</feed>
